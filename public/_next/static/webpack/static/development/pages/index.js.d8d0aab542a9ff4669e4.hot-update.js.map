{"version":3,"file":"static/webpack/static/development/pages/index.js.d8d0aab542a9ff4669e4.hot-update.js","sources":["webpack:///./components/form.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport FormErrors from \"../components/formErrors\"\nimport Router from 'next/router'\n\nclass Form extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            email: \"\",\n            optin: \"\",\n            formErrors: {email: '', optin: ''},\n            emailValid: false,\n            optinTicked: false,\n            formValid: false\n        }\n    }\n\n    handleUserInput (e) {\n        const name = e.target.name;\n        const value = e.target.value;\n       \n        this.setState({[name]: value}, \n                () => { this.validateField(name, value) });\n    }\n\n    handleUserCheckbox (e) {\n        const name = e.target.name;\n        const value = e.target.checked;\n       \n        this.setState({[name]: value}, \n                () => { this.validateField(name, value) });\n    }\n\n    handleButtonClick (e) {\n        e.preventDefault()\n        var data = new FormData();\n        data.append(\"email\", this.state.email);\n        data.append(\"ajax\", \"1\");\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.addEventListener('load', (e) => {\n            if (this.readyState === 4) {\n                var response = JSON.parse(this.response);\n                if(response['success'] == true) {\n                    Router.push('/confirm')\n                } else {\n                    this.setState({formErrors: {email: response['errorMessage']}})\n                }\n            }\n         })\n\n        xhr.open(\"POST\", \"https://yr.dev.ps-tek.de/selligent/gamification/ajax\");\n        xhr.send(data);\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        let optinTicked = this.state.optinTicked;\n      \n        switch(fieldName) {\n          case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : 'Please enter a valid email.';\n            break;\n          case 'optin':\n            optinTicked = value == true;\n            fieldValidationErrors.optin = optinTicked ? '': 'You must agree to the terms and conditions.';\n            break;\n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        emailValid: emailValid,\n                        optinTicked: optinTicked\n                      }, this.validateForm);\n      }\n      \n      validateForm() {\n        this.setState({formValid: this.state.emailValid && this.state.optinTicked});\n      }\n\n    render(){\n        return (\n            <form style={{ marginBottom: 20}} onSubmit={this.handleSubmit}>\n                <div style={{ textAlign: `left` }}>\n                    <div className=\"emailWrapper\">\n                        <label style={{ fontWeight: `bold`, textTransform: `uppercase`, display: `block`, width: 160, float: `left` }} htmlFor=\"email\">E-Mail Adresse:</label>\n                        <input className=\"email\" style={{ padding: 10, marginBottom: 10}} id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={(event) => this.handleUserInput(event)} />\n                    </div>\n                    <input name=\"optin\" type=\"checkbox\" id=\"optin\" style={{ margin: `0 10px 0`, float: `left`}} checked={this.state.optin} onChange={(event) => this.handleUserCheckbox(event)} />\n                    <label className=\"emailOptinLabel small\" htmlFor=\"optin\" style={{ float: `left`}}>Hinweis: Mit Deiner Einwilligung bestätigst du uns, Dich regelmäßig per E-Mail über Neuerungen und aktuelle Angebote von Young & Reckless informieren zu dürfen. Deine E-Mail Adresse wird nicht an Dritte weitergegeben. Eine Abmeldung ist jederzeit möglich. Die Datenschutzhinweise habe ich zur Kenntnis genommen.</label>\n                    <div>\n                        <FormErrors formErrors={this.state.formErrors} />\n                    </div>\n                </div>\n                <div>\n                    <button onClick={(event) => this.handleButtonClick(event)} disabled={!this.state.formValid}>Jetzt teilnehmen</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default Form;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAVA;AACA;AAWA;AAAA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnGA;AACA;AAqGA;;;;A","sourceRoot":""}